# Script para ejecutar an√°lisis de SonarQube en Windows (PowerShell)
# Autor: Claude Code Assistant
# Descripci√≥n: Ejecuta an√°lisis completo de c√≥digo con SonarQube

param(
    [string]$ProjectKey = "dotnet-ecuador-api",
    [string]$SonarUrl = "http://localhost:9000",
    [string]$Token = ""
)

Write-Host "üîç Iniciando an√°lisis de SonarQube para DotNet Ecuador API" -ForegroundColor Green
Write-Host "=================================================" -ForegroundColor Green

# Verificar que SonarQube est√© ejecut√°ndose
Write-Host "üì° Verificando conexi√≥n a SonarQube..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "$SonarUrl/api/system/status" -UseBasicParsing -TimeoutSec 10
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ SonarQube est√° ejecut√°ndose correctamente" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå Error: SonarQube no est√° disponible en $SonarUrl" -ForegroundColor Red
    Write-Host "   Ejecuta: docker-compose -f docker-compose.sonarqube.yml up -d" -ForegroundColor Yellow
    exit 1
}

# Verificar .NET SDK
Write-Host "üîß Verificando .NET SDK..." -ForegroundColor Yellow
if (-not (Get-Command dotnet -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Error: .NET SDK no est√° instalado" -ForegroundColor Red
    exit 1
}
$dotnetVersion = dotnet --version
Write-Host "‚úÖ .NET SDK versi√≥n: $dotnetVersion" -ForegroundColor Green

# Verificar SonarScanner
Write-Host "üîß Verificando SonarScanner..." -ForegroundColor Yellow
if (-not (Get-Command dotnet-sonarscanner -ErrorAction SilentlyContinue)) {
    Write-Host "üì¶ Instalando SonarScanner..." -ForegroundColor Yellow
    dotnet tool install --global dotnet-sonarscanner
}
Write-Host "‚úÖ SonarScanner est√° disponible" -ForegroundColor Green

# Limpiar build anterior
Write-Host "üßπ Limpiando builds anteriores..." -ForegroundColor Yellow
dotnet clean
Remove-Item -Path "TestResults" -Recurse -ErrorAction SilentlyContinue
Remove-Item -Path ".sonarqube" -Recurse -ErrorAction SilentlyContinue

# Configurar token si se proporciona
$tokenParam = ""
if ($Token -ne "") {
    $tokenParam = "/d:sonar.token=$Token"
    Write-Host "üîë Usando token de autenticaci√≥n" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Sin token - usando autenticaci√≥n por defecto (admin/admin)" -ForegroundColor Yellow
}

# Iniciar an√°lisis de SonarQube
Write-Host "üöÄ Iniciando an√°lisis de SonarQube..." -ForegroundColor Green
dotnet sonarscanner begin `
    /k:"$ProjectKey" `
    /d:sonar.host.url="$SonarUrl" `
    $tokenParam `
    /d:sonar.cs.opencover.reportsPaths="TestResults/**/coverage.opencover.xml" `
    /d:sonar.cs.vstest.reportsPaths="TestResults/**/*.trx" `
    /d:sonar.exclusions="**/bin/**,**/obj/**,**/TestResults/**"

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Error al iniciar SonarScanner" -ForegroundColor Red
    exit 1
}

# Restaurar dependencias
Write-Host "üì¶ Restaurando dependencias..." -ForegroundColor Yellow
dotnet restore

# Compilar proyecto
Write-Host "üî® Compilando proyecto..." -ForegroundColor Yellow
dotnet build --no-restore --configuration Release

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Error en la compilaci√≥n" -ForegroundColor Red
    exit 1
}

# Ejecutar tests con cobertura
Write-Host "üß™ Ejecutando tests con cobertura..." -ForegroundColor Yellow
dotnet test --no-build --configuration Release `
    --collect:"XPlat Code Coverage" `
    --results-directory TestResults `
    --logger trx `
    --settings coverlet.runsettings

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Error en la ejecuci√≥n de tests" -ForegroundColor Red
}

# Finalizar an√°lisis de SonarQube
Write-Host "üìä Finalizando an√°lisis de SonarQube..." -ForegroundColor Green
dotnet sonarscanner end $tokenParam

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Error al finalizar SonarScanner" -ForegroundColor Red
    exit 1
}

Write-Host "=================================================" -ForegroundColor Green
Write-Host "‚úÖ An√°lisis completado exitosamente!" -ForegroundColor Green
Write-Host "üìä Revisar resultados en: $SonarUrl" -ForegroundColor Cyan
Write-Host "üîç Proyecto: $ProjectKey" -ForegroundColor Cyan
Write-Host "=================================================" -ForegroundColor Green